syntax = "proto3";

package task_management;

option go_package = "github.com/latrung124/Totodoro-Backend/internal/proto_package/task_management";

import "google/protobuf/timestamp.proto";

// ==== ENUMS ====
enum TaskGroupPriority {
  TASK_GROUP_PRIORITY_UNSPECIFIED = 0;
  TASK_GROUP_PRIORITY_LOW = 1;
  TASK_GROUP_PRIORITY_MEDIUM = 2;
  TASK_GROUP_PRIORITY_HIGH = 3;
}

enum TaskGroupStatus {
  TASK_GROUP_STATUS_UNSPECIFIED = 0;
  TASK_GROUP_STATUS_IDLE = 1;
  TASK_GROUP_STATUS_PENDING = 2;
  TASK_GROUP_STATUS_IN_PROGRESS = 3;
  TASK_GROUP_STATUS_COMPLETED = 4;
}

enum TaskPriority {
  TASK_PRIORITY_UNSPECIFIED = 0;
  TASK_PRIORITY_LOW = 1;
  TASK_PRIORITY_MEDIUM = 2;
  TASK_PRIORITY_HIGH = 3;
}

enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_IDLE = 1;
  TASK_STATUS_PENDING = 2;
  TASK_STATUS_IN_PROGRESS = 3;
  TASK_STATUS_COMPLETED = 4;
}

// ==== MODELS ====

// Represents a group of related tasks.
message TaskGroup {
  string group_id = 1;                     
  string user_id = 2;                      
  string icon = 3;                         
  string name = 4;                         
  string description = 5;                  
  google.protobuf.Timestamp deadline = 6;  
  TaskGroupPriority priority = 7;          
  TaskGroupStatus status = 8;              
  int32 completed_tasks = 9;               
  int32 total_tasks = 10;                  
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
}

// Represents an individual task.
message Task {
  string task_id = 1;                      
  string user_id = 2;                      
  string group_id = 3;                     
  string name = 4;                         
  string description = 5;                  
  int32 completed_pomodoros = 6;           
  int32 total_pomodoros = 7;               
  int32 progress = 8;                      
  TaskPriority priority = 9;               
  TaskStatus status = 10;                  
  google.protobuf.Timestamp deadline = 11; 
  google.protobuf.Timestamp created_at = 12;
  google.protobuf.Timestamp updated_at = 13;
}

// ==== REQUESTS AND RESPONSES ====

// TaskGroup CRUD
message CreateTaskGroupRequest {
  string user_id = 1;
  string icon = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp deadline = 5;
  TaskGroupPriority priority = 6;
  TaskGroupStatus status = 7;
}

message CreateTaskGroupResponse {
  TaskGroup group = 1;
}

message GetTaskGroupsRequest {
  string user_id = 1;
}

message GetTaskGroupsResponse {
  repeated TaskGroup groups = 1;
}

// Task CRUD
message CreateTaskRequest {
  string user_id = 1;
  string group_id = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp deadline = 5;
  TaskPriority priority = 6;
  TaskStatus status = 7;
  int32 total_pomodoros = 8;
}

message CreateTaskResponse {
  Task task = 1;
}

message GetTasksRequest {
  string user_id = 1;
  string group_id = 2; // Optional: filter by group
}

message GetTasksResponse {
  repeated Task tasks = 1;
}

message UpdateTaskRequest {
  string task_id = 1;
  string name = 2;
  string description = 3;
  google.protobuf.Timestamp deadline = 4;
  TaskPriority priority = 5;
  TaskStatus status = 6;
  int32 completed_pomodoros = 7;
  int32 total_pomodoros = 8;
  int32 progress = 9;
}

message UpdateTaskResponse {
  Task task = 1;
}

message DeleteTaskRequest {
  string task_id = 1;
}

message DeleteTaskResponse {
  bool success = 1;
}

// ==== SERVICE DEFINITION ====

service TaskManagementService {
  // Task group operations
  rpc CreateTaskGroup(CreateTaskGroupRequest) returns (CreateTaskGroupResponse);
  rpc GetTaskGroups(GetTaskGroupsRequest) returns (GetTaskGroupsResponse);

  // Task operations
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
  rpc GetTasks(GetTasksRequest) returns (GetTasksResponse);
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);
  rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse);
}
