syntax = "proto3";

option go_package = "github.com/latrung124/Totodoro-Backend/internal/proto_package/pomodoro_service";

package pomodoro_service;

import "google/protobuf/timestamp.proto";

// ===== ENUM DEFINITIONS =====
enum SessionStatus {
  SESSION_STATUS_UNSPECIFIED = 0;
  SESSION_STATUS_IDLE = 1;
  SESSION_STATUS_IN_PROGRESS = 2;
  SESSION_STATUS_PENDING = 3;
  SESSION_STATUS_COMPLETED = 4;
}

enum SessionType {
  SESSION_TYPE_UNSPECIFIED = 0;
  SESSION_TYPE_SHORT_BREAK = 1;
  SESSION_TYPE_LONG_BREAK = 2;
}

// ===== ENTITY DEFINITIONS =====
message PomodoroSession {
  string session_id = 1;                     // UUID - Primary key
  string user_id = 2;                        // FK to UserProfile.users
  string task_id = 3;                        // FK to TaskManagement.tasks (NOT NULL)
  google.protobuf.Timestamp start_time = 4;  // Required
  int32 progress = 5;                        // Seconds elapsed
  google.protobuf.Timestamp end_time = 6;    // Nullable
  SessionStatus status = 7;                  // Running, Paused, Completed, etc.
  SessionType session_type = 8;              // Pomodoro, Short Break, Long Break
  int32 number_in_cycle = 9;                 // Position in pomodoro cycle
  google.protobuf.Timestamp last_update = 10;// Last updated time
}

// ===== REQUESTS AND RESPONSES =====
message CreateSessionRequest {
  string user_id = 1;
  string task_id = 2;
  google.protobuf.Timestamp start_time = 3;
  SessionType session_type = 4;
  int32 number_in_cycle = 5;
}

message CreateSessionResponse {
  PomodoroSession session = 1;
}

message GetSessionsRequest {
  string user_id = 1;
  string task_id = 2; // Optional filter
}

message GetSessionsResponse {
  repeated PomodoroSession sessions = 1;
}

message UpdateSessionRequest {
  string session_id = 1;
  int32 progress = 2;
  google.protobuf.Timestamp end_time = 3;
  SessionStatus status = 4;
  SessionType session_type = 5;
  int32 number_in_cycle = 6;
  google.protobuf.Timestamp last_update = 7;
}

message UpdateSessionResponse {
  PomodoroSession session = 1;
}

message DeleteSessionRequest {
  string session_id = 1;
}

message DeleteSessionResponse {
  bool success = 1;
}

// ===== SERVICE DEFINITION =====
service PomodoroService {
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
  rpc GetSessions(GetSessionsRequest) returns (GetSessionsResponse);
  rpc UpdateSession(UpdateSessionRequest) returns (UpdateSessionResponse);
  rpc DeleteSession(DeleteSessionRequest) returns (DeleteSessionResponse);
}
